name: Deploy to AKS using Helm (Pull from ACR)

on:
  workflow_run:
    workflows: ["Docker Image"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 3: Log in to Azure using Service Principal
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 4: Set up AKS credentials
    - name: Set up AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

    # Step 5: Log in to Azure Container Registry (ACR)
    - name: Log in to Azure Container Registry
      run: |
        az acr login --name "${{ secrets.AZURE_REGISTRY_URL }}"

    # Step 6: Install Helm
    - name: Set up Helm
      uses: azure/setup-helm@v1

    - name: Update AKS cluster (if needed)
      run: |
        az aks update \
          --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} \
          --name ${{ secrets.AKS_CLUSTER_NAME }} \
          --enable-managed-identity # Adjust this flag as needed for your scenario

    - name: Assign AcrPull Role
      run: |
        az role assignment create \
          --assignee ${{ secrets.AKS_PRINCIPAL_ID }} \
          --role AcrPull \
          --scope /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AKS_RESOURCE_GROUP }}/providers/Microsoft.ContainerRegistry/registries/${{ secrets.ACR_NAME }}

    - name: Uninstall backend release (if exists)
      run: |
        helm uninstall backend || true  # Ignore error if release does not exist

    - name: Uninstall frontend release (if exists)
      run: |
        helm uninstall frontend || true  # Ignore error if release does not exist

    # Step 7: Deploy using Helm
    - name: Deploy to AKS using Helm
      run: |
        helm upgrade --install backend kubernetes/backend --debug \
          --set image.repository=${{ secrets.ACR_NAME }}.azurecr.io/backend \
          --set image.tag=latest \

    # Step 7: Deploy using Helm
    - name: Deploy to AKS using Helm
      run: |
        helm upgrade --install frontend kubernetes/frontend --debug \
          --set image.repository=${{ secrets.ACR_NAME }}.azurecr.io/frontend \
          --set image.tag=latest \

    # Step 8: Verify the deployment
    - name: Verify Deployment
      run: |
        kubectl get pods